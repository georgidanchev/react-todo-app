{"version":3,"sources":["components/layout/Header.js","components/AddTodo.js","components/pages/About.js","components/TodoItem.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","textAlign","padding","color","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","AddTodo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onSubmit","e","preventDefault","props","addTodo","setState","onChange","defineProperty","target","name","value","inherits","createClass","key","display","type","flex","placeholder","className","Component","About","Fragment","TodoItem","getStyle","borderBottom","todo","completed","_this$props$todo","id","markComplete","bind","onClick","delTodo","btnStyle","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","App","toggleComplete","Axios","delete","then","res","toConsumableArray","filter","catch","err","console","error","post","complated","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAaA,IAAMA,EAAc,CAClBC,WAAY,OACZC,UAAW,SACXC,QAAS,OACTC,MAAO,QAGHC,EAAY,CAChBC,eAAgB,OAChBF,MAAO,QAGMG,EAtBf,WACE,OACEC,EAAAC,EAAAC,cAAA,UAAQC,MAAOX,GACbQ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,MAAON,EAAWQ,GAAG,KAA3B,QAFF,IAE8C,MAC5CL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,MAAON,EAAWQ,GAAG,UAA3B,mBCoCSC,EAzCf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,MAAQ,CACNC,MAAO,IAHXhB,EAMEiB,SAAW,SAACC,GACVA,EAAEC,iBACFnB,EAAKoB,MAAMC,QAAQrB,EAAKe,MAAMC,OAC9BhB,EAAKsB,SAAS,CACZN,MAAO,MAVbhB,EAcEuB,SAAW,SAACL,GAAD,OAAOlB,EAAKsB,SAALrB,OAAAuB,EAAA,EAAAvB,CAAA,GACfiB,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,SAf9B3B,EAAA,OAAAC,OAAA2B,EAAA,EAAA3B,CAAAJ,EAAAC,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAA,EAAAiC,IAAA,SAAAH,MAAA,WAmBI,OACEpC,EAAAC,EAAAC,cAAA,QAAMwB,SAAUd,KAAKc,SAAUvB,MAAO,CAAEqC,QAAS,SAC/CxC,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,OACZN,KAAK,QACLhC,MAAO,CAAEuC,KAAM,KAAM/C,QAAS,OAC9BgD,YAAY,cACZP,MAAOxB,KAAKY,MAAMC,MAClBO,SAAUpB,KAAKoB,WAEfhC,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,SACZL,MAAM,SACNQ,UAAU,MACVzC,MAAO,CAAEuC,KAAM,YA/BvBpC,EAAA,CAA6BuC,aCQdC,MATf,WACE,OACE9C,EAAAC,EAAAC,cAACF,EAAAC,EAAM8C,SAAP,KACE/C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kFCFO8C,EAAb,SAAAzC,GAAA,SAAAyC,IAAA,IAAAxC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,GAAA,QAAAnC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAsC,IAAA3B,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEiC,SAAW,WACT,MAAO,CACLtD,QAAS,OACTF,WAAY,UACZyD,aAAc,kBACdpD,eAAgBW,EAAKoB,MAAMsB,KAAKC,UAC9B,eAAiB,SAPzB3C,EAAA,OAAAC,OAAA2B,EAAA,EAAA3B,CAAAsC,EAAAzC,GAAAG,OAAA4B,EAAA,EAAA5B,CAAAsC,EAAA,EAAAT,IAAA,SAAAH,MAAA,WAWW,IAAAiB,EACezC,KAAKiB,MAAMsB,KAAzBG,EADDD,EACCC,GAAI7B,EADL4B,EACK5B,MACZ,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,MAAQS,KAAKqC,YAChBjD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,WACZT,SAAWpB,KAAKiB,MAAM0B,aAAaC,KAAK5C,KAAM0C,KAC7C,IACC7B,EACFzB,EAAAC,EAAAC,cAAA,UAAQuD,QAAU7C,KAAKiB,MAAM6B,QAAQF,KAAK5C,KAAM0C,GAAMnD,MAAOwD,GAA7D,WApBVX,EAAA,CAA8BH,aAiCxBc,EAAW,CACflE,WAAY,UACZmE,aAAc,MACdjE,QAAS,UACTkE,OAAQ,SACRC,MAAO,QACPlE,MAAO,QAGMoD,ICvBAe,mLAlBJ,IAAAtD,EAAAG,KACP,OAAOA,KAAKiB,MAAMmC,MAAMC,IAAI,SAACd,GAAD,OAC1BnD,EAAAC,EAAAC,cAACgE,EAAD,CACEX,aAAiB9C,EAAKoB,MAAM0B,aAC5BG,QAAYjD,EAAKoB,MAAM6B,QACvBnB,IAAQY,EAAKG,GACbH,KAASA,aAPGN,8BC+DLsB,oNAxDb3C,MAAQ,CACNwC,MAAO,MAQTI,eAAiB,SAACd,GAChB7C,EAAKsB,SAAS,CAAEiC,MAAOvD,EAAKe,MAAMwC,MAAMC,IAAI,SAAAd,GAI1C,OAHGA,EAAKG,KAAOA,IACbH,EAAKC,WAAaD,EAAKC,WAElBD,SAIXO,QAAU,SAACJ,GACTe,IAAMC,OAAN,8CAAA/C,OAA2D+B,IAC1DiB,KAAK,SAAAC,GAAG,OAAI/D,EAAKsB,SAAS,CAAEiC,MAAMtD,OAAA+D,EAAA,EAAA/D,CAAKD,EAAKe,MAAMwC,MAAMU,OAAO,SAAAvB,GAAI,OAAIA,EAAKG,KAAOA,SAASqB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,gBAAkBF,QAG5I9C,QAAU,SAACL,GACT4C,IAAMU,KAAK,6CAA8C,CACvDtD,QACAuD,WAAW,IACVT,KAAK,SAAAC,GAAG,OAAI/D,EAAKsB,SAAS,CAC3BiC,MAAK,GAAAzC,OAAAb,OAAA+D,EAAA,EAAA/D,CAAMD,EAAKe,MAAMwC,OAAjB,CAAwBQ,EAAIS,WAC/BN,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,cAAgBF,yFAzB7B,IAAAM,EAAAtE,KAClByD,IAAMc,IAAI,wDACTZ,KAAK,SAAAC,GAAG,OAAIU,EAAKnD,SAAS,CAAEiC,MAAOQ,EAAIS,0CA0BjC,IAAAG,EAAAxE,KACP,OACEZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,OACb5C,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA5D,GAAK,OAClC7B,EAAAC,EAAAC,cAACF,EAAAC,EAAM8C,SAAP,KACE/C,EAAAC,EAAAC,cAACwF,EAAD,CAAS5D,QAAYsD,EAAKtD,UAC1B9B,EAAAC,EAAAC,cAACyF,EAAD,CACEpC,aAAiB6B,EAAKhB,eACtBJ,MAAUoB,EAAK5D,MAAMwC,MACrBN,QAAY0B,EAAK1B,cAIvB1D,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAW9C,cAjD1BD,cCEEgD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAST,OAAOzF,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC","file":"static/js/main.887b8b30.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link style={linkStyle} to=\"/\">Home</Link> {' | '}\r\n      <Link style={linkStyle} to=\"/about\">About</Link>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  textAlign: 'center',\r\n  padding: '10px',\r\n  color: '#fff',\r\n}\r\n\r\nconst linkStyle = {\r\n  textDecoration: 'none',\r\n  color: '#fff',\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({\r\n      title: '',\r\n    })\r\n  } \r\n\r\n  onChange = (e) => this.setState({ \r\n    [e.target.name]: e.target.value \r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n        <input type=\"text\" \r\n        name=\"title\"\r\n        style={{ flex: '10', padding: '5px' }}\r\n        placeholder=\"Add Todo...\" \r\n        value={this.state.title} \r\n        onChange={this.onChange}/>\r\n\r\n        <input type=\"submit\" \r\n        value=\"Submit\" \r\n        className=\"btn\" \r\n        style={{ flex: '1'}} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import Todos from \"./Todos\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      padding: '10px',\r\n      background: '#f4f4f4',\r\n      borderBottom: '1px #ccc dotted',\r\n      textDecoration: this.props.todo.completed \r\n      ? 'line-through' : 'none',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={ this.getStyle() }>\r\n        <p>\r\n          <input type=\"checkbox\" \r\n          onChange={ this.props.markComplete.bind(this, id) }/> \r\n          {' '}\r\n          { title }\r\n          <button onClick={ this.props.delTodo.bind(this, id) } style={btnStyle}>x</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  borderRadius: '50%',\r\n  padding: '5px 9px',\r\n  cursor: 'ponter',\r\n  float: 'right',\r\n  color: 'none',\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo)=> (\r\n      <TodoItem \r\n        markComplete = { this.props.markComplete }\r\n        delTodo = { this.props.delTodo }\r\n        key = { todo.id } \r\n        todo = { todo } \r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport Todos from './components/Todos';\nimport Axios from \"axios\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({ todos: res.data }))\n  }\n\n  toggleComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  }\n\n  delTodo = (id) => {\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] })).catch(err => console.error('delete error:' + err))\n  }\n\n  addTodo = (title) => {\n    Axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      complated: false,\n    }).then(res => this.setState({\n      todos: [...this.state.todos, res.data]\n    })).catch(err => console.error('add errro: ' + err))\n  }\n\n  render() {\n    return (\n      <Router>     \n        <div className='app'>\n          <div className=\"container\">\n            <Header />\n            <Route  exact path='/' render={props => (\n              <React.Fragment>\n                <AddTodo addTodo = { this.addTodo } />\n                <Todos \n                  markComplete = { this.toggleComplete } \n                  todos = { this.state.todos } \n                  delTodo = { this.delTodo } \n                />\n              </React.Fragment>\n            )} />\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}